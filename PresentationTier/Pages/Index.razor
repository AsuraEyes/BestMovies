@page "/"
@using PresentationTier.Models
@using PresentationTier.Data.Media

@inject NavigationManager NavigationManager

@inject IMediaService MediaService
@inject IMovieService MovieService
@inject ITVService TVService

<PageTitle>Home</PageTitle>
<RadzenStack Style="padding-left: 10%; padding-right: 10%">
    <RadzenStack Orientation="Radzen.Orientation.Horizontal" Gap="10">
        <div class="control-container" style="width: 500px;">
            <SfCarousel AnimationEffect="CarouselAnimationEffect.Fade" ShowIndicators="false"
                        CssClass="partial-carousel ec" AutoPlay="true" PartialVisible="true" style="width: 100%; height: 100%">
                @foreach (var item in media)
                {
                    <CarouselItem>
                        <figure class="img-container">
                            <RadzenImage Style="height:250px; width:100%;" Path="@item.Backdrop"/>
                            <RadzenText Style="bottom: 4em; color: #fff; font-size: 12pt; position: relative; padding-top: 0.3em; padding-bottom: 0.3em; padding-left: 1em; padding-right: 1em; text-align: center; width: 100%;">@item.Title</RadzenText>
                        </figure>
                    </CarouselItem>
                }
            </SfCarousel>
        </div>
    
        <RadzenRow>
            <div class="col-md-6">
                <RadzenFieldset Text="Trending">
                    <div class="row"></div>
                </RadzenFieldset>
            </div>
        </RadzenRow>
    </RadzenStack>
    
    <RadzenRow Gap="0">
        <RadzenText TextStyle="TextStyle.H5">Trending</RadzenText>
        <RadzenStack Orientation="Radzen.Orientation.Horizontal" Gap="15" Style="overflow-y: auto">
            @foreach (var item in media)
            {
                @if (item.Type.Equals("movie"))
                {
                    <RadzenStack>
                        <RadzenCard onclick="@(() => NavigateToMovie(item.Id))" Style="padding: 0; min-width: 150px; max-width: 150px; min-height: 225px; border-radius: 10px">
                            <RadzenImage Path="@item.Poster" Style="max-width: 100%; min-height: 100%; border-radius: 10px"/>
                        </RadzenCard>
                        <RadzenText>@item.Title</RadzenText>
                    </RadzenStack>
                }
                else
                {
                    <RadzenStack>
                        <RadzenCard onclick="@(() => NavigateToTVShow(item.Id))" Style="padding: 0; min-width: 150px; max-width: 150px; min-height: 225px; border-radius: 10px">
                            <RadzenImage Path="@item.Poster" Style="max-width: 100%; min-height: 100%; border-radius: 10px"/>
                        </RadzenCard>
                        <RadzenText>@item.Name</RadzenText>
                    </RadzenStack>
                }
            }
        </RadzenStack>
    </RadzenRow>
</RadzenStack>

@code {
    private MediaList mediaList = new ();
    private Media[] media = {};

    protected override async Task OnInitializedAsync()
    {
        mediaList = await MediaService.GetTrendingAsync();
        media = mediaList.ListOfMedia;
    }
    
    private void NavigateToMovie(int id)
    {
        NavigationManager.NavigateTo($"movie/{id}");
    }
    
    private void NavigateToTVShow(int id)
    {
        NavigationManager.NavigateTo($"tv/{id}");
    }
}