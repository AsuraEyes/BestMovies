@page "/movie/{Id:int}"
@using PresentationTier.Models
@using PresentationTier.Data.Media
@using System.Globalization
@using Microsoft.AspNetCore.Mvc.RazorPages
@using PresentationTier.Data

@inject NavigationManager NavigationManager

@inject IMovieService MovieService
@inject IReviewService ReviewService

<PageTitle>@movie.Title (@movie.ReleaseDate.Year)</PageTitle>
<RadzenRow Style="width: 1720px">
    <RadzenStack Orientation="Orientation.Vertical" Style="width: 100%; max-height: 600px; background-color: rgba(0, 0, 0, 0.8); height:100%">
        <RadzenImage Path="@movie.Backdrop" Style="opacity: 40%; mask-image: linear-gradient(to top, transparent 150px, black); pointer-events: none"/>
        <RadzenStack Orientation="Orientation.Horizontal" Style="position: absolute; margin: 45px 160px; width: 1400px" Gap="25">
            <RadzenImage Path="@movie.Poster" Style="width: 300px; height: 450px; border-radius: 10px"/>
            <RadzenStack Gap="15" Style="width: 100%; margin-right: 40px">
                <RadzenText TextStyle="TextStyle.DisplayH3" Style="margin-bottom: 0; color: #ffffff">@movie.Title (@movie.ReleaseDate.Year)</RadzenText>
                @if (!string.IsNullOrEmpty(movie.Tagline))
                {
                    <RadzenText Text="@movie.Tagline" Style="font-style: italic; color: #ffffff" />
                }
                <RadzenStack Orientation="Orientation.Horizontal" Gap="10" Style="position: relative; top: -20px">
                    <RadzenStack Gap="0" Style="max-width: 120px; max-height: 120px">
                        <RadzenArcGauge Style="width: 120px; height: 120px">
                            <RadzenArcGaugeScale Min="0" Max="10" StartAngle="0" EndAngle="360" Fill="rgba(255, 223, 0, 0.5)">
                                <RadzenArcGaugeScaleValue Value="@movie.AVGVote" Fill="rgb(255, 223, 0)">
                                    <Template>
                                        <RadzenText Text="@movie.AVGVote.ToString("F1")" Style="color: #ffffff; margin: 0"/>
                                    </Template>
                                </RadzenArcGaugeScaleValue>
                            </RadzenArcGaugeScale>
                        </RadzenArcGauge>
                        <RadzenText Style="position: relative; top: -25px; color: #ffffff" TextAlign="TextAlign.Center">@movie.Count votes</RadzenText>
                    </RadzenStack>
                    <RadzenStack Style="max-height: 36px; position: relative; top: 40px" Orientation="Orientation.Horizontal">
                        <RadzenButton ButtonStyle="ButtonStyle.Dark" class="rz-border-radius-10" Icon="list"/>
                        <RadzenButton Variant="Variant.Text" ButtonStyle="ButtonStyle.Light" Icon="play_arrow" Style="max-height: 36px" Text="Trailer" Click="Open"/>
                    </RadzenStack>
                </RadzenStack>
                <RadzenStack Style="position: relative; top: -20px">
                    <RadzenStack Gap="0">
                        <RadzenText Text="Overview" TextStyle="TextStyle.DisplayH6" Style="margin-bottom: 0; margin-top: 8px; color: #ffffff"/>
                        <RadzenText Style="padding-top: 10px; color: #ffffff" Text="@movie.Overview"/>
                    </RadzenStack>
                    <RadzenRow>
                        <RadzenText Text="Director" TextStyle="TextStyle.DisplayH6" Style="color: #ffffff"/>
                        @foreach (var director in crew)
                        {
                            if (director.Job.Equals("Director"))
                            {
                                <RadzenText Text="@director.Name" Style="color: #ffffff"/>
                            }
                        }
                    </RadzenRow>
                    <RadzenRow>
                        @foreach (var genre in genres)
                        {
                            <RadzenButton Text="@genre.Name" Variant="Variant.Outlined" ButtonStyle="ButtonStyle.Light" Size="ButtonSize.Small" class="rz-border-radius-6"/>
                        }
                    </RadzenRow>
                </RadzenStack>
            </RadzenStack>
        </RadzenStack>
    </RadzenStack>
    <RadzenStack Orientation="Orientation.Horizontal" Style="max-width: 1400px">
        @if (showVideo)
            {
                <RadzenContent @onclick="Close" Style="position: fixed; inset: 0; padding: 0; background-color: rgba(0, 0, 0, 0.6)">
                    <RadzenStack Style="position: fixed; width: 80%; left: 50%; transform: translate(-50%,0); top: 10%; background-color: black" Gap="0">
                        <iframe src="@movie.Trailer" allowfullscreen style="width: 100%; aspect-ratio: 16/9"></iframe>
                    </RadzenStack>
                </RadzenContent>
            }
        <RadzenRow Gap="0" Style="max-width: 1022px; margin: 30px 30px 30px 150px;">
            <RadzenStack Style="max-width: 100%">
                <RadzenText TextStyle="TextStyle.H5">Top Cast</RadzenText>
                <RadzenStack Orientation="Orientation.Horizontal" Gap="15" Style="overflow-y: auto; margin-top: 5px">
                    @foreach (var actor in cast)
                    {
                        <RadzenStack onclick="@(() => NavigateToCastMember(actor.Id))">
                            <RadzenCard class="rz-shadow-7" Style="padding: 0; min-width: 150px; max-width: 150px; min-height: 225px; border-radius: 10px">
                                <RadzenImage Path="@actor.Picture" Style="max-width: 100%; min-height: 225px; border-radius: 10px"/>
                            </RadzenCard>
                            <RadzenStack Gap="0">
                                <RadzenText Text="@actor.Name" Style="font-weight: bold"/>
                                <RadzenText Text="@actor.Character"/>
                            </RadzenStack>
                        </RadzenStack>
                    }
                </RadzenStack>
                <RadzenButton Variant="Variant.Text" ButtonStyle="ButtonStyle.Dark" Text="Full Cast & Crew" Style="text-align: left" Click="NavigateToCast"/>
            </RadzenStack>
            <RadzenStack Gap="5">
                <hr/>
                <RadzenText TextStyle="TextStyle.H5" Style="margin-bottom: 10px">Top Review</RadzenText>
                <RadzenStack Style="width: 100%" Gap="10">
                    @if (reviews.Length != 0)
                    {
                        <RadzenCard Style="border-radius: 10px; max-width: 650px; min-width: 650px">
                            <RadzenStack Orientation="Orientation.Horizontal">
                                <RadzenImage Path="https://bootdey.com/img/Content/avatar/avatar6.png" Style="width: 50px; border-radius: 50%"/>
                                <RadzenStack Gap="0" Style="width: 100%">
                                    <RadzenText TextStyle="TextStyle.DisplayH6">@review.Title</RadzenText>
                                    <RadzenRow Gap="5">
                                        <RadzenText TextStyle="TextStyle.Caption" Text="@review.Username"/>
                                        <RadzenText TextStyle="TextStyle.Caption">
                                            @review.Created.ToString("dd MMMM yyyy")
                                        </RadzenText>
                                    </RadzenRow>
                                </RadzenStack>
                            </RadzenStack>
                            <RadzenText Style="padding-top: 10px">@review.Description</RadzenText>
                            <RadzenRating Value="review.Score" ReadOnly=true></RadzenRating>
                        </RadzenCard>
                    }
                    else
                    {
                        <RadzenText Text="There are currently no reviews for this movie"/>
                        <RadzenLink Path="@NavigateToReviewsPath()" Style="font-weight: 600">Be the first!!!</RadzenLink>
                    }
                    <RadzenButton Variant="Variant.Text" ButtonStyle="ButtonStyle.Dark" Text="Read All Reviews" Click="NavigateToReviews" Style="text-align: left"/>
                </RadzenStack>
            </RadzenStack>

            @if (movieCollection != null)
            {
                <RadzenStack Style="width: 100%">
                    <hr/>
                    <RadzenStack class="rz-shadow-7" Style="height: 300px; width: 550px; background-color: rgba(0, 0, 0, 0.8)" onclick="@(() => NavigateToCollection(movieCollection.Id))">
                        <RadzenImage Path="@movieCollection.Backdrop" Style="opacity: 40%; max-height: 300px; border-radius: 10px"/>
                        <RadzenStack Style="position: relative; bottom: 40%; margin-left: 5%">
                            <RadzenText Text="@movieCollection.Name" TextStyle="TextStyle.H5" Style="color: #ffffff"/>
                            <RadzenButton Variant="Variant.Outlined" Text="View the Collection" ButtonStyle="ButtonStyle.Light" Style="border-radius: 25px; width: 250px"/>
                        </RadzenStack>
                    </RadzenStack>
                </RadzenStack>
            }

            <RadzenStack Style="max-width: 100%">
                <hr/>
                <RadzenText TextStyle="TextStyle.H5">You May Like</RadzenText>
                @if (recommended.Length == 0)
                {
                    <RadzenStack Orientation="Orientation.Horizontal" Gap="15" Style="overflow-y: auto; margin-top: 5px">
                        @foreach (var m in similar)
                        {
                            <RadzenStack>
                                <RadzenCard class="rz-shadow-7" onclick="@(() => NavigateToMovie(m.Id))" Style="padding: 0; min-width: 150px; max-width: 150px; min-height: 225px; border-radius: 10px">
                                    <RadzenImage Path="@m.Poster" Style="max-width: 100%; min-height: 225px; border-radius: 10px"/>
                                </RadzenCard>
                                <RadzenText>@m.Title</RadzenText>
                            </RadzenStack>
                        }
                    </RadzenStack>
                }
                else
                {
                    <RadzenStack Orientation="Orientation.Horizontal" Gap="15" Style="overflow-y: auto; margin-top: 5px">
                        @foreach (var m in recommended)
                        {
                            <RadzenStack>
                                <RadzenCard class="rz-shadow-7" onclick="@(() => NavigateToMovie(m.Id))" Style="padding: 0; min-width: 150px; max-width: 150px; min-height: 225px; border-radius: 10px">
                                    <RadzenImage Path="@m.Poster" Style="max-width: 100%; min-height: 225px; border-radius: 10px"/>
                                </RadzenCard>
                                <RadzenText>@m.Title</RadzenText>
                            </RadzenStack>
                        }
                    </RadzenStack>
                }
            </RadzenStack>
        </RadzenRow>
        <RadzenStack Gap="15" Style="margin: 30px">
            <RadzenStack Gap="0">
                <RadzenText Text="Status" Style="margin-bottom: 0; margin-top: 8px; font-weight: bold"/>
                <RadzenText Text="@movie.Status"/>
            </RadzenStack>
            <RadzenStack Gap="0">
                <RadzenText Text="Original Language" Style="margin-bottom: 0; margin-top: 8px; width: 171px; font-weight: bold"/>
                <RadzenText Text="@movie.Language"/>
            </RadzenStack>
            <RadzenStack Gap="0">
                <RadzenText Text="Budget" Style="margin-bottom: 0; margin-top: 8px; font-weight: bold"/>
                @if (movie.Budget == 0)
                {
                    <RadzenText Text="-"/>
                }
                else
                {
                    <RadzenText Text="@movie.Budget.ToString("C0", CultureInfo.CreateSpecificCulture("en-US"))"/>
                }
            </RadzenStack>
            <RadzenStack Gap="0">
                <RadzenText Text="Revenue" Style="margin-bottom: 0; margin-top: 8px; font-weight: bold"/>
                @if (movie.Revenue == 0)
                {
                    <RadzenText Text="-"/>
                }
                else
                {
                    <RadzenText Text="@movie.Revenue.ToString("C0", CultureInfo.CreateSpecificCulture("en-US"))"/>
                }
            </RadzenStack>
        </RadzenStack>
    </RadzenStack>
</RadzenRow>

@code {
    [Parameter]
    public int Id { get; set; }
    private bool showVideo;
    
    double move = 38;

    private Movie movie = new();
    private Genre[] genres = {};
    private Person[] cast = {};
    private Person[] crew = {};
    private Media[] recommended = {};
    private Media[] similar = {};
    private Review review = new();
    private Review[] reviews = { };
    private MovieCollection movieCollection;

    protected override async Task OnInitializedAsync()
    {
        movie = await MovieService.GetMovieAsync(Id);
        recommended = await MovieService.GetRecommendedAsync(Id);
        similar = await MovieService.GetSimilarAsync(Id);
        reviews = await ReviewService.GetAllReviewsAsync(Id);
        if (reviews.Length != 0)
        {
            review = reviews[0];
        }
        genres = movie.Genres;
        cast = movie.Credits.TopCast;
        crew = movie.Credits.Crew;
        movieCollection = movie.MovieCollection;
    }
    
    private void Open()
    {
        showVideo = true;
    }
    
    private void Close()
    {
        showVideo = false;
    }

    private void NavigateToReviews()
    {
        NavigationManager.NavigateTo($"/movie/{Id}/reviews");
    }
    
    private string NavigateToReviewsPath()
    {
        return $"/movie/{Id}/reviews";
    }
    
    private void NavigateToCollection(int id)
    {
        NavigationManager.NavigateTo($"/collection/{id}");
    }
    
    private void NavigateToCast()
    {
        NavigationManager.NavigateTo($"/movie/{Id}/cast");
    }
    
    private void NavigateToCastMember(int id)
    {
        NavigationManager.NavigateTo($"/person/{id}");
    }

    private async Task NavigateToMovie(int id)
    {
        NavigationManager.NavigateTo($"/movie/{id}", true);
    }
}
    
