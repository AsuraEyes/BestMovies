@page "/movie/{Id:int}"
@using PresentationTier.Models
@using PresentationTier.Data.Media
@using Orientation = Radzen.Orientation

@inject NavigationManager NavigationManager

@inject IMovieService MovieService

<PageTitle>@movie.Title</PageTitle>
<RadzenRow Style="width: 1720px">
    <RadzenStack Orientation="Orientation.Vertical" Style="width: 100%; max-height: 600px">
        <RadzenImage Path="@movie.Backdrop" Style="height: 100%; filter: blur(1px); opacity: 40%"/>
        <RadzenStack Orientation="Orientation.Horizontal" Style="position: relative; bottom: 600px; margin: 30px 160px;">
            <RadzenImage Path="@movie.Poster" Style="width: 300px; height: 450px; border-radius: 10px"/>
            <RadzenStack Gap="15" Style="width: 100%; margin-right: 40px">
                <RadzenText TextStyle="TextStyle.DisplayH3" Text="@movie.Title" Style="margin-bottom: 0"/>
                @if (!string.IsNullOrEmpty(movie.Tagline))
                {
                    <RadzenText Text="@movie.Tagline" Style="font-style: italic"/>
                }
                <RadzenRow Gap="10">
                    <RadzenButton ButtonStyle="ButtonStyle.Dark" class="rz-border-radius-10" Icon="list"/>
                    @if (string.IsNullOrEmpty(movie.Tagline))
                    {
                        <RadzenButton ButtonStyle="ButtonStyle.Dark" class="rz-border-radius-10" Icon="star" Style="color: #fefb00"/>
                    }
                    else
                    {
                        <RadzenButton ButtonStyle="ButtonStyle.Dark" class="rz-border-radius-10" Icon="star"/> 
                    }
                    @if (string.IsNullOrEmpty(movie.Tagline))
                    {
                        <RadzenButton ButtonStyle="ButtonStyle.Dark" class="rz-border-radius-10" Icon="bookmark" Style="color: #53d5fd"/>
                    }
                    else
                    {
                        <RadzenButton ButtonStyle="ButtonStyle.Dark" class="rz-border-radius-10" Icon="bookmark"/>
                    }
                    <RadzenButton Variant="Variant.Text" ButtonStyle="ButtonStyle.Dark" Icon="play_arrow" Style="max-height: 36px" Text="Trailer"/>
                </RadzenRow>
                <RadzenStack Gap="0">
                    <RadzenText Text="Overview" TextStyle="TextStyle.DisplayH6" Style="margin-bottom: 0; margin-top: 8px"/>
                    <RadzenText Style="padding-top: 10px" Text="@movie.Overview"/>
                </RadzenStack>
                <RadzenRow>
                    <RadzenText Text="Director" TextStyle="TextStyle.DisplayH6"/>
                    <RadzenText></RadzenText>
                </RadzenRow>
                <RadzenRow>
                    <RadzenText Text="Writers" TextStyle="TextStyle.DisplayH6"/>
                    <RadzenText></RadzenText>
                </RadzenRow>
                <RadzenRow>
                    @foreach (var genre in genres)
                    {
                        <RadzenButton Text="@genre.Name" Variant="Variant.Outlined" ButtonStyle="ButtonStyle.Dark" Size="ButtonSize.Small" class="rz-border-radius-6"/>
                    }
                </RadzenRow>
            </RadzenStack>
        </RadzenStack>
    </RadzenStack>
    <RadzenStack Orientation="Orientation.Horizontal">
        <RadzenRow Gap="0" Style="margin: 30px 160px; max-width: 1022px">
            <RadzenStack Style="max-width: 100%">
                <RadzenText TextStyle="TextStyle.H5">Top Cast</RadzenText>
                <RadzenStack Orientation="Orientation.Horizontal" Gap="15" Style="overflow-y: auto; margin-top: 5px">
                    @foreach (var actor in cast)
                    {
                        <RadzenStack>
                            <RadzenCard class="rz-shadow-7" Style="padding: 0; min-width: 150px; max-width: 150px; min-height: 225px; border-radius: 10px">
                                <RadzenImage Path="@actor.Picture" Style="max-width: 100%; min-height: 225px; border-radius: 10px"/>
                            </RadzenCard>
                            <RadzenStack Gap="0">
                                <RadzenText Text="@actor.Name" Style="font-weight: bold"/>
                                <RadzenText Text="@actor.Character"/>
                            </RadzenStack>
                        </RadzenStack>
                    }
                </RadzenStack>
                <RadzenButton Variant="Variant.Text" ButtonStyle="ButtonStyle.Dark" Text="Full Cast & Crew" Style="text-align: left"/>
                <hr>
            </RadzenStack>
            <RadzenText TextStyle="TextStyle.H5">Top Review</RadzenText>
            <RadzenStack Style="width: 100%" Gap="10">
                <RadzenCard Style="border-radius: 10px; min-width: 100%" class="rz-shadow-7">
                    <RadzenStack Orientation="Orientation.Horizontal">
                        <RadzenImage Path="https://bootdey.com/img/Content/avatar/avatar6.png" Style="width: 50px; border-radius: 50%"/>
                        <RadzenStack Gap="0" Style="width: 100%">
                            <RadzenRow Gap="5">
                                <RadzenText TextStyle="TextStyle.DisplayH6">@review.Title</RadzenText>
                                <RadzenButton Size="ButtonSize.Small" Text="@review.Rating.ToString()" Style="display: inline-block; position: relative; top: -5px" ButtonStyle="ButtonStyle.Dark" Icon="grade" />
                            </RadzenRow>
                            <RadzenRow Gap="5">
                                <RadzenText TextStyle="TextStyle.Caption">
                                    <RadzenLink Click="">Username</RadzenLink>
                                </RadzenText>
                                <RadzenText TextStyle="TextStyle.Caption">
                                    @review.Created.ToString("dd MMMM yyyy")
                                </RadzenText>
                            </RadzenRow>
                        </RadzenStack>
                    </RadzenStack>
                    <RadzenText Style="padding-top: 10px">@review.Description</RadzenText>
                </RadzenCard>
                <RadzenButton Variant="Variant.Text" ButtonStyle="ButtonStyle.Dark" Text="Read All Reviews" Click="() => NavigateToReviews()" Style="text-align: left"/>
                <hr>
            </RadzenStack>
            <RadzenStack Style="max-width: 100%">
                <RadzenText TextStyle="TextStyle.H5">You May Like</RadzenText>
                @if (recommended.Length == 0)
                {
                    <RadzenStack Orientation="Orientation.Horizontal" Gap="15" Style="overflow-y: auto; margin-top: 5px">
                        @foreach (var m in similar)
                        {
                            <RadzenStack>
                                <RadzenCard onclick="@(() => NavigateToMovie(m.Id))" Style="padding: 0; min-width: 150px; max-width: 150px; min-height: 225px; border-radius: 10px">
                                    <RadzenImage Path="@m.Poster" Style="max-width: 100%; min-height: 225px; border-radius: 10px"/>
                                </RadzenCard>
                                <RadzenText>@m.Title</RadzenText>
                            </RadzenStack>
                        }
                    </RadzenStack>
                }
                else
                {
                    <RadzenStack Orientation="Orientation.Horizontal" Gap="15" Style="overflow-y: auto; margin-top: 5px">
                        @foreach (var m in recommended)
                        {
                            <RadzenStack>
                                <RadzenCard onclick="@(() => NavigateToMovie(m.Id))" Style="padding: 0; min-width: 150px; max-width: 150px; min-height: 225px; border-radius: 10px">
                                    <RadzenImage Path="@m.Poster" Style="max-width: 100%; min-height: 225px; border-radius: 10px"/>
                                </RadzenCard>
                                <RadzenText>@m.Title</RadzenText>
                            </RadzenStack>
                        }
                    </RadzenStack>
                }
            </RadzenStack>
        </RadzenRow>
        <RadzenStack Style="margin: 30px; width: 260px">
            <RadzenText Text="Text"/>
            <RadzenText Text="Text"/>
            <RadzenText Text="Text"/>
            <RadzenText Text="Text"/>
            <RadzenText Text="Text"/>
            <RadzenText Text="Text"/>
        </RadzenStack>
    </RadzenStack>
</RadzenRow>

@code {
    [Parameter]
    public int Id { get; set; }

    private Movie movie = new();
    private Genre[] genres = {};
    private Person[] cast = {};
    private Media[] recommended = {};
    private Media[] similar = {};
    private Review review = new() { Title = "Test Review", Rating = 3.5, Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum." };

    protected override async Task OnInitializedAsync()
    {
        movie = await MovieService.GetMovieAsync(Id);
        recommended = await MovieService.GetRecommendedAsync(Id);
        similar = await MovieService.GetSimilarAsync(Id);
        genres = movie.Genres;
        cast = movie.Credits.Cast;
    }

    private void NavigateToReviews()
    {
        NavigationManager.NavigateTo($"/movie/{Id}/reviews");
    }
    
    private void NavigateToMovie(int id)
    {
        NavigationManager.NavigateTo($"/movie/{id}",true);
    }
}
    
