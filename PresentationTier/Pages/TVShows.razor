@page "/tv"
@using PresentationTier.Data.Media
@using PresentationTier.Models
@using Orientation = Radzen.Orientation

@inject NavigationManager NavigationManager

@inject ITVService TVService

<PageTitle>TV Shows</PageTitle>
<RadzenRow Style="width: 1720px">
    <RadzenStack Style="margin: 45px 160px; width: 1600px">
        <RadzenText Text="TV Shows" TextStyle="TextStyle.DisplayH4"/>
        <RadzenStack Orientation="Orientation.Horizontal" Gap="0" Style="position: relative" JustifyContent="JustifyContent.Center">
            <RadzenTextBox Placeholder="Search..." @bind-Value="@search" Style="border-radius: 25px 0 0 25px; border: 1px solid rgb(33, 33, 33); width: 500px"/>
            <RadzenButton Style="border-radius: 0 25px 25px 0;" ButtonStyle="ButtonStyle.Dark" Icon="search" Variant="Variant.Outlined" Click="SearchTVShow"/>
        </RadzenStack>
        <RadzenRow>
            @foreach (var movie in shows)
            {
                <RadzenStack Style="width: 250px" onclick="@(() => NavigateToTVShow(movie.Id))">
                    <RadzenCard Style="border-radius: 10px; padding: 0">
                        <RadzenImage Path="@movie.Poster" Style="border-radius: 10px; width: 100%"/>
                    </RadzenCard>
                    <RadzenText Style="width: 100%">@movie.Title</RadzenText>
                </RadzenStack>
            }
        </RadzenRow>
            <RadzenStack Orientation="Orientation.Horizontal" Style="position: relative; left: 50%; bottom: 0">
                @switch (Page)
                {
                    case < 1:
                        <RadzenButton Text="Previous" Variant="@Variant.Outlined" ButtonStyle="@ButtonStyle.Dark" Click="@Previous" Disabled="true"/>
                        <RadzenButton Text="Next" Variant="@Variant.Outlined" ButtonStyle="@ButtonStyle.Dark" Click="@Next"/>
                        break;
                    case > 500:
                        <RadzenButton Text="Previous" Variant="@Variant.Outlined" ButtonStyle="@ButtonStyle.Dark" Click="@Previous"/>
                        <RadzenButton Text="Next" Variant="@Variant.Outlined" ButtonStyle="@ButtonStyle.Dark" Click="@Next" Disabled="true"/>
                        break;
                    default:
                        <RadzenButton Text="Previous" Variant="@Variant.Outlined" ButtonStyle="@ButtonStyle.Dark" Click="@Previous" Style="border-radius: 25px"/>
                        <RadzenButton Text="Next" Variant="@Variant.Outlined" ButtonStyle="@ButtonStyle.Dark" Click="@Next" Style="border-radius: 25px"/>
                        break;
                }
            </RadzenStack>
    </RadzenStack>
</RadzenRow>

@code {
    private int Page = 1;
    private string search = "";

    private MediaList media = new ();
    private Media[] shows = {};

    protected override async Task OnInitializedAsync()
    {
        media = await TVService.GetTVShowsAsync(Page);
        shows = media.ListOfMedia;
    }
    
    private void SearchTVShow()
    {
        NavigationManager.NavigateTo(search.Equals("") ? "/tv" : $"/tv/search?query={search}");
    }

    private async Task Next()
    {
        Page++;
        await OnInitializedAsync();
    }
    
    private async Task Previous()
    {
        Page--;
        await OnInitializedAsync();
    }
    
    private void NavigateToTVShow(int id)
    {
        NavigationManager.NavigateTo($"/tv/{id}",true);
    }
}