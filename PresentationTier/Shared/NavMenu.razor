@inject AuthenticationStateProvider stateProvider
@using PresentationTier.Authorization
@inject NavigationManager navigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BestMovies</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <a class="nav-link" href="#" @onclick="PerformLogout">
                        <span class="oi oi-person" aria-hidden="true"></span> Logout
                    </a>
                </div>
            </Authorized>

            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/login">
                        <span class="oi oi-person" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/Posts">
                        <span class="oi oi-comment-square" aria-hidden="true"></span> Posts
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private string email;
    private string password;
    private string? errorMessage;

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    private async Task PerformLogout()
    {
        errorMessage = "";
        email = "";
        password = "";
        try
        {
            await ((CustomAuthenticationStateProvider)stateProvider).Logout();
            navigationManager.NavigateTo("/");
        }
        catch (Exception e) { }
    }
}
